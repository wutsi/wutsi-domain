openapi: "3.0.0"
info:
  title: "Wutsi Security API"
  description: |
    API for managing API-KEYs
  version: "1.0.0"

servers:
  - url: https://wutsi-security-test.herokuapp.com
    description: Sandbox
  - url: https://wutsi-security-prod.herokuapp.com
    description: Production

paths:
  /v1/api-keys:
    post:
      operationId: "create"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApiKeyResponse'
      tags:
        - Security

  /v1/api-keys/{id}:
    get:
      operationId: "get"
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApiKeyResponse'
      tags:
        - Security

    post:
      operationId: "update"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeyRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApiKeyResponse'
      tags:
        - Security

    delete:
      operationId: "delete"
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Success
      tags:
        - Security


components:
  schemas:
    CreateApiKeyRequest:
      type: object
      properties:
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
      required:
        - name
        - scopes

    CreateApiKeyResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid

    UpdateApiKeyRequest:
      type: object
      properties:
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
      required:
        - name
        - scopes

    UpdateApiKeyResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid

    GetApiKeyResponse:
      type: object
      properties:
        apiKey:
          type: object
          $ref: "#/components/schemas/ApiKey"

    ApiKey:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
