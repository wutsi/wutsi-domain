openapi: "3.0.0"
info:
  title: "Wutsi Recommendation API"
  description: |
    Recommendation API
  version: "1.0.0"

servers:
  - url: https://wutsi-recommend-test.herokuapp.com
    description: Sandbox
  - url: https://wutsi-recommend-prod.herokuapp.com
    description: Production

paths:
  /v1/recommendations/feeds/stories:
    get:
      operationId: "create-story-feed"
      summary: Create the Story CSV
      description: |
        Create the Story CSV feed, that will be used for training the AI model.
        Here is the schema of the CSV file:
        - ITEM_ID: ID of the story
        - CATEGORIES: List of topic and tags, separated by `|`
        - LANGUAGE: Story language
        - CREATION_TIMESTAMP: Publish timestamp
      parameters:
        - in: query
          name: site-id
          description: ID of the Site
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedResponse'
      security:
        - api_key: [ 'recommend-manage' ]
      tags:
        - Feeds

  /v1/recommendations/feeds/interactions:
    get:
      operationId: "create-interaction-feed"
      summary: Create teh user interaction feed
      description: |
        Create the Story CSV feed, that will be used for training the AI model
        Here is the schema of the CSV file:
        - ITEM_ID: ID of the story
        - USER_ID: ID of the user
        - EVENT_TYPE: Type of event
        - EVENT_VALUE: Value of the event
        - TRAFFIC: Type of traffic
        - TIMESTAMP: interaction timestamp
      parameters:
        - in: query
          name: site-id
          description: ID of the Site
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedResponse'
      security:
        - api_key: [ 'recommend-manage' ]
      tags:
        - Feeds

  /v1/recommendations/similar:
    get:
      operationId: "get-similar"
      summary: "Return similar products"
      parameters:
        - in: query
          name: product-id
          description: ID of the Product for which we want to find similar products
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: user-id
          schema:
            type: integer
            format: int64
            nullable: true
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedResponse'
      security:
        - api_key: [ 'recommend-read' ]
      tags:
        - Recommendation


components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    GetSimilarProductsResponse:
      type: object
      properties:
        productIds:
          description: ID of the similar products, sorted from most similar to least similar
          type: array
          items:
            type: integer
            format: int64

    CreateFeedResponse:
      type: object
      properties:
        feedUrl:
          description: URL of the CSV file generated
          type: string
