openapi: "3.0.0"
info:
  title: "Wutsi Order API"
  description: |
    API for managing orders and online payments
  version: "1.0.0"

servers:
  - url: https://wutsi-order-test.herokuapp.com
    description: Sandbox
  - url: https://wutsi-order-prod.herokuapp.com
    description: Production

paths:
  /v1/orders:
    post:
      operationId: "create-order"
      description: "Create a new order"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
      security:
        - api_key: [ order-manage ]
      tags:
        - Orders

  /v1/orders/{order-id}:
    get:
      operationId: "get-order"
      description: "Get an order"
      parameters:
        - in: path
          name: order-id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
      security:
        - api_key: [ order-read ]
      tags:
        - Orders

  /v1/payouts:
    post:
      operationId: "create-payout"
      description: |
        Create a payout for a partner.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePayoutRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePayoutResponse'
      security:
        - api_key: [ payout-manage ]
      tags:
        - Payment

  /v1/payments:
    post:
      operationId: "create-payment"
      description: |
        Record a new payment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentResponse'
      security:
        - api_key: [ payment-manage ]
      tags:
        - Payment

  /v1/partners/{partner-id}/wallet:
    get:
      operationId: "get-wallet"
      description: "Get a partner wallet information"
      parameters:
        - in: path
          name: partner-id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWalletResponse'
      security:
        - api_key: [ transaction-read ]
      tags:
        - Transaction

  /v1/transactions:
    get:
      operationId: "search-transaction"
      description: "Search Transactions"
      parameters:
        - in: query
          name: partner-id
          schema:
            type: integer
            format: int64
            nullable: true
        - in: query
          name: start-date
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: end-date
          required: true
          schema:
            type: string
            format: date
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransactionResponse'
      security:
        - api_key: [ transaction-read ]
      tags:
        - Transaction

components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    CreateOrderRequest:
      type: object
      properties:
        siteId:
          type: integer
          format: int64
          nullable: true
          description: "ID of the Site"
        partnerId:
          type: integer
          format: int64
          nullable: true
          description: "ID of the user who placed the Order"
        productId:
          type: integer
          format: int64
          nullable: true
          description: "ID of the product purchased by this Order"
        productRateId:
          type: integer
          format: int64
          nullable: true
          description: "ID of product's rate"
        description:
          type: string
          description: "Description of the order"
        total:
          type: number
          format: double
          description: "Total price of the order"
        currency:
          type: string
          description: "ISO-4217 3 letters code of the currency"
      required:
        - siteId
        - planId
        - planRateId
        - description
        - currency

    CreateOrderResponse:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
          description: "ID of the Order created"


    GetOrderResponse:
      type: object
      properties:
        order:
          type: object
          $ref: "#/components/schemas/Order"

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Order unique identifier"
        siteId:
          type: integer
          format: int64
          description: "ID of the site associated with the Order"
        productId:
          type: integer
          format: int64
          description: "ID of the product purchased by the Order"
        productRateId:
          type: integer
          format: int64
          description: "ID of the product's rate"
        partnerId:
          type: integer
          format: int64
          description: "ID of the user who placed the Order"
        description:
          type: string
          description: "Description of the Order"
        total:
          type: number
          format: double
          description: "Total price of Order"
        currency:
          type: string
          description: "ISO-4217 3 letters code of the currency"
        status:
          type: string
          description: "Status of the order"
        creationDateTime:
          type: string
          format: date-time
          description: "Date/Time when the order was created"


    CreatePaymentRequest:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        provider:
          type: string
        amount:
          type: number
          format: double
        fees:
          type: number
          format: double
        currency:
          type: string
        externalId:
          type: string
      required:
        - provided
        - externalId
        - currency

    CreatePaymentResponse:
      type: object
      properties:
        paymentId:
          type: integer
          format: int64
          description: "ID of the Payment created"


    GetWalletResponse:
      type: object
      properties:
        transactions:
          type: object
          $ref: "#/components/schemas/Wallet"

    Wallet:
      type: object
      description: "Electronic wallet of a partner"
      properties:
        siteId:
          type: integer
          format: int64
          description: "ID of the site"
        partnerId:
          type: integer
          format: int64
          description: "ID of the partner"
        amount:
          type: number
          format: double
          description: "Total amount in the partner's wallet"
        currency:
          type: string
          description: "ISO-4217 3 letters code of the currency"


    SearchTransactionResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"

    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Transaction unique identifier"
        siteId:
          type: integer
          format: int64
          description: "ID of the site"
        partnerId:
          type: integer
          format: int64
          description: "ID of the user who owns the transaction"
        description:
          type: string
          description: "Description of the Transaction"
          nullable: true
        amount:
          type: number
          format: double
          description: "Gross amount"
        providerFees:
          type: number
          format: double
          description: "Payment provider fees"
        wutsiFees:
          type: number
          format: double
          description: "Wutsi fees"
        net:
          type: number
          format: double
          description: "Net amount"
        currency:
          type: string
          description: "ISO-4217 3 letters code of the currency"
        type:
          type: string
          description: "Type of transaction"
        transactionDateTime:
          type: string
          format: date-time
          description: "Date/Time of the transaction"


    CreatePayoutRequest:
      type: object
      properties:
        partnerId:
          type: integer
          format: int64


    CreatePayoutResponse:
      type: object
      properties:
        payoutId:
          type: integer
          format: int64
